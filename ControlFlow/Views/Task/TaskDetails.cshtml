@using ControlFlow.Core
@using ControlFlow.Core.Entities.Tasks
@using ControlFlow.Core.Enums.TaskEnum
@model UserTask

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@section Styles {
    <link rel="stylesheet" href="~/css/taskDetails.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/main.css" asp-append-version="true" />
}
<main class="task-container">
    <div class="task">
        <div class="btn-container">
            <a asp-action="Main" class="primary-btn">
                <div class="btn-content-container">
                    <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M19 12H5M12 19l-7-7 7-7" />
                    </svg>
                    Back to Board
                </div>
            </a>
        </div>

        <div class="task-header">
            <div class="task-title-section">
                <h1 class="task-title">@Model.Title</h1>
                <div class="task-status">
                    @Model.TaskStatus
                </div>
            </div>
            <div class="task-priority-section">
                <div class="task-header-priority task-header-priority-@Model.Priority.ToString().ToLower()-priority">
                    @Model.Priority
                </div>
            </div>
        </div>

        <div class="task-metadata">
            <div class="metadata-item">
                <svg width="@SvgLibrary.Calendar.Width"
                     height="@SvgLibrary.Calendar.Height"
                     viewBox="@SvgLibrary.Calendar.ViewBox"
                     fill="@SvgLibrary.Calendar.Fill"
                     stroke="@SvgLibrary.Calendar.Stroke"
                     stroke-width="@SvgLibrary.Calendar.StrokeWidth">
                    @foreach (var element in SvgLibrary.Calendar.Elements)
                    {
                        @Html.Raw(SvgLibrary.RenderSvgElement(element))
                    }
                </svg>
                <span>Due Dec 25</span>
            </div>
            <div class="metadata-item">
                @* <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M20 7H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z" />
                    <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16" />
                </svg> *@
                <span>@Model.Category.ToString()</span>
            </div>
        </div>

        <div class="task-description-container">
            <h3 class="task-description-header">
                Description
            </h3>
            <p class="task-description">
                @Model.Description
            </p>
        </div>
        <div class="task-actions">
            @if (Model.TaskStatus == CurrentTaskStatus.Pending)
            {
                <a asp-action="ChangeTaskPriority" asp-route-taskId="@Model.Id" class="primary-btn">Start Task!</a>

            }
            else if (Model.TaskStatus == CurrentTaskStatus.InProgress)
            {
                <a asp-action="ChangeTaskPriority" asp-route-taskId="@Model.Id" class="primary-btn">Complete Task!</a>

            }
            <a asp-action="UpsertTask" asp-route-taskId="@Model.Id" class="primary-btn">Edit Task</a>
            <a asp-action="DeleteTask" asp-route-taskId="@Model.Id" class="warning-btn">Delete Task</a>

        </div>
    </div>
</main>
